<testsuites>
	<testsuite name="AllTests" tests="12">
		<testcase classname="AllTests" name="WarehouseHasInventory"/>
		<testcase classname="AllTests" name="WarehouseRemove"/>
		<testcase classname="AllTests" name="WarehouseAdd"/>
		<testcase classname="AllTests" name="WarehouseGetInventory"/>
		<testcase classname="AllTests" name="OrderCtor"/>
		<testcase classname="AllTests" name="OrderFillFromWarehouse"/>
		<testcase classname="AllTests" name="WarehouseHasInventory"/>
		<testcase classname="AllTests" name="WarehouseRemove"/>
		<testcase classname="AllTests" name="WarehouseAdd"/>
		<testcase classname="AllTests" name="WarehouseGetInventory"/>
		<testcase classname="AllTests" name="OrderCtor"/>
		<testcase classname="AllTests" name="OrderFillFromWarehouse">
			<failure message="../src/Test.cpp:204 OrderFillFromWarehouse: expectedMockWarehouse == allCalls[1] expected:	[\nMockWarehouse()\nhasInventory(const std::string&amp;, int) const,Talisker,50\nremove(const std::string&amp;, int) const,Talisker,50\n]	but was:	[\nMockWarehouse()\nhasInventory(const std::string&amp;, int) const,Talisker,50\n]	">
OrderFillFromWarehouse: expectedMockWarehouse == allCalls[1] expected:	[\nMockWarehouse()\nhasInventory(const std::string&amp;, int) const,Talisker,50\nremove(const std::string&amp;, int) const,Talisker,50\n]	but was:	[\nMockWarehouse()\nhasInventory(const std::string&amp;, int) const,Talisker,50\n]	
			</failure>
		</testcase>
	</testsuite>
</testsuites>
